<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>86</LINE><COLUMN>8</COLUMN></SFA><DEFECTCODE>28182</DEFECTCODE><DESCRIPTION>Dereferencing NULL pointer. 'temp' contains the same NULL value as 'ptr' did. See line 72 for an earlier location where this can occur</DESCRIPTION><FUNCTION>Double_List::sort</FUNCTION><DECORATED>?sort@Double_List@@QAEXXZ</DECORATED><FUNCLINE>66</FUNCLINE><PROBABILITY>1</PROBABILITY><RANK>3</RANK><CATEGORY><RULECATEGORY>mspft</RULECATEGORY></CATEGORY><PATH><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>68</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>69</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>70</LINE><COLUMN>7</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>71</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>72</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>74</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>76</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>76</LINE><COLUMN>24</COLUMN><KEYEVENT><ID>1</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>'temp' may be NULL (Skip this loop)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>86</LINE><COLUMN>8</COLUMN><KEYEVENT><ID>2</ID><KIND>usage</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'temp' is dereferenced, but may still be NULL</MESSAGE></KEYEVENT></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>121</LINE><COLUMN>9</COLUMN></SFA><DEFECTCODE>6280</DEFECTCODE><DESCRIPTION>'q' is allocated with 'new', but deleted with 'free'.</DESCRIPTION><FUNCTION>Double_List::Delete</FUNCTION><DECORATED>?Delete@Double_List@@QAEXH@Z</DECORATED><FUNCLINE>90</FUNCLINE><PATH><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>93</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>121</LINE><COLUMN>9</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>135</LINE><COLUMN>20</COLUMN></SFA><DEFECTCODE>6011</DEFECTCODE><DESCRIPTION>Dereferencing NULL pointer 'temp-&gt;next'. </DESCRIPTION><FUNCTION>Double_List::Delete</FUNCTION><DECORATED>?Delete@Double_List@@QAEXH@Z</DECORATED><FUNCLINE>90</FUNCLINE><PROBABILITY>1</PROBABILITY><RANK>4</RANK><CATEGORY><RULECATEGORY>mspft</RULECATEGORY></CATEGORY><PATH><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>92</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>93</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>94</LINE><COLUMN>7</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>96</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>104</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>112</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>113</LINE><COLUMN>18</COLUMN><KEYEVENT><ID>1</ID><KIND>declaration</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>'temp-&gt;next' may be NULL</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>118</LINE><COLUMN>12</COLUMN><KEYEVENT><ID>2</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Skip this branch, (assume 'data==q-&gt;info' is false)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>128</LINE><COLUMN>20</COLUMN><KEYEVENT><ID>3</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Skip this loop, (assume 'temp-&gt;next!=0' is false)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>134</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>135</LINE><COLUMN>20</COLUMN><KEYEVENT><ID>4</ID><KIND>usage</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'temp-&gt;next' is dereferenced, but may still be NULL</MESSAGE></KEYEVENT></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>104</LINE><COLUMN>17</COLUMN></SFA><DEFECTCODE>6011</DEFECTCODE><DESCRIPTION>Dereferencing NULL pointer 'temp'. </DESCRIPTION><FUNCTION>Double_List::Delete</FUNCTION><DECORATED>?Delete@Double_List@@QAEXH@Z</DECORATED><FUNCLINE>90</FUNCLINE><PROBABILITY>1</PROBABILITY><RANK>4</RANK><CATEGORY><RULECATEGORY>mspft</RULECATEGORY></CATEGORY><PATH><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>92</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>93</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>94</LINE><COLUMN>7</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>96</LINE><COLUMN>11</COLUMN><KEYEVENT><ID>1</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>'temp' may be NULL (Enter this branch)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>97</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>104</LINE><COLUMN>17</COLUMN><KEYEVENT><ID>2</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Skip this branch, (assume 'temp-&gt;info==data' is false)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>104</LINE><COLUMN>17</COLUMN><KEYEVENT><ID>3</ID><KIND>usage</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'temp' is dereferenced, but may still be NULL</MESSAGE></KEYEVENT></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>113</LINE><COLUMN>18</COLUMN></SFA><DEFECTCODE>28182</DEFECTCODE><DESCRIPTION>Dereferencing NULL pointer. 'q' contains the same NULL value as 'temp' did. See line 104 for an earlier location where this can occur</DESCRIPTION><FUNCTION>Double_List::Delete</FUNCTION><DECORATED>?Delete@Double_List@@QAEXH@Z</DECORATED><FUNCLINE>90</FUNCLINE><PROBABILITY>1</PROBABILITY><RANK>3</RANK><CATEGORY><RULECATEGORY>mspft</RULECATEGORY></CATEGORY><PATH><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>92</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>93</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>94</LINE><COLUMN>7</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>96</LINE><COLUMN>11</COLUMN><KEYEVENT><ID>1</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>'start' may be NULL (Enter this branch)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>97</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>104</LINE><COLUMN>17</COLUMN><KEYEVENT><ID>2</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Skip this branch, (assume 'temp-&gt;info==data' is false)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>112</LINE><COLUMN>5</COLUMN><KEYEVENT><ID>3</ID><KIND>alias</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>(alias) 'q' receives the value of 'start' (which may be NULL)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>113</LINE><COLUMN>18</COLUMN><KEYEVENT><ID>4</ID><KIND>branch</KIND><IMPORTANCE>Full</IMPORTANCE><MESSAGE>Skip this loop, (assume 'q-&gt;next!=0' is false)</MESSAGE></KEYEVENT></SFA><SFA><FILEPATH>c:\users\asif ali\documents\visual studio 2013\4th semester\c++\doublelinklistpractice\doublelinklistpractice\</FILEPATH><FILENAME>doublelinklistpractice.cpp</FILENAME><LINE>113</LINE><COLUMN>18</COLUMN><KEYEVENT><ID>5</ID><KIND>usage</KIND><IMPORTANCE>Essential</IMPORTANCE><MESSAGE>'q' is dereferenced, but may still be NULL</MESSAGE></KEYEVENT></SFA></PATH></DEFECT></DEFECTS>